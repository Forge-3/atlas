type AtlasArgs = variant { UpgradeArg : opt Config; InitArg : Config };
type Config = record { spaces_per_space_lead : nat8 };
type Error = variant {
  UserRankNoMatch : Rank;
  FailedToSaveSpace : text;
  FailedToUpdateConfig : text;
  UserRichSpaceLimit : record { found : nat64; expected : nat64 };
  UserRankToHigh : record { found : Rank; expected : Rank };
  UserAlreadyHaveExpectedRank : Rank;
  FailedToGetCanisterInfo : text;
  FailedToInstallWASM : text;
  FailedToInitializeCanister : text;
  AnonymousCaller;
};
type Integrations = record { discord_id : opt text };
type Rank = variant { SpaceLead; User; Admin };
type Result = variant { Ok : principal; Err : Error };
type Result_1 = variant { Ok; Err : Error };
type User = record {
  integrations : Integrations;
  rank : Rank;
  owned_spaces : vec nat64;
};
type WalletReceiveResult = record { accepted : nat64 };
service : (AtlasArgs) -> {
  app_config : () -> (Config) query;
  create_new_space : (text, text, opt text, opt text, opt text) -> (Result);
  get_user : (principal) -> (User) query;
  set_user_space_lead : (principal) -> (Result_1);
  wallet_balance : () -> (nat) query;
  wallet_receive : () -> (WalletReceiveResult);
}
