name: CI Pipeline

on:
  pull_request:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - develop
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: ESlint
        run: npm run lint-staged

      - name: Check for errors
        run: npm run check_for_errors

      - name: Build project
        run: npm run build
        
  format-rust:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-C debug-assertions=y"
      RUST_BACKTRACE: 1
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential git clang curl libssl-dev llvm libudev-dev make protobuf-compiler pkg-config git-restore-mtime

      - name: Checkout
        uses: actions/checkout@v4

      # this is needed to make sure that cargo uses the cached target files,
      # which will have an older date than the checked out source code.
      - name: Restore files timestamps
        run: |
          # set all dirs and files mtime to the fixed timestamp, this one was chosen
          # symbolically as polkadot genesis block date
          find . -exec touch -t 202005260100 {} +
          # restore mtime based on git commit log
          git restore-mtime

      - name: Setup caching for rust/cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Format code with rustfmtcarg
        run: cargo fmt --check
